#include "ros/ros.h"
#include "std_msgs/Float32MultiArray.h"
#include <vector>

/**
 * This tutorial demonstrates simple receipt of messages over the ROS system.
 */

int iq_count = 200;  // frame size
int chunk_size = 1000; //frame count
//std::vector<float> data_buffer;


void uwbCallback(const std_msgs::Float32MultiArray::ConstPtr& msg)
{

  ROS_INFO("I heard: [%f]", msg->data[0]);
  std::vector<float> data = msg->data;
  std::cout << data.size() <<std::endl;
  // data_buffer.insert(data_buffer.end(), data.begin(), data.end());  
  // std::cout << data_buffer.size() <<std::endl;
  
  for (float i: data)
  {
    std::cout << i << " ";
    
  }
  std::cout << std::endl;
  
}

int main(int argc, char **argv)
{

  ros::init(argc, argv, "listener");

  ros::NodeHandle n;

  ros::Subscriber sub = n.subscribe("uwb_chunk", 1000, uwbCallback);

  while (ros::ok()){
    ros::spin();
  }

  return 0;
}
